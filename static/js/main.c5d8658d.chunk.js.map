{"version":3,"sources":["sounds/panel.mp3","sounds/dice.mp3","sounds/outcheckers.mp3","sounds/winner.mp3","images/rules.gif","components/checker/Checker.js","components/statusBar/StatusBar.js","components/board/panel/Panel.js","components/checker/OutChecker.js","components/displayCheckers/DisplayCheckers.js","components/rollarea/dice/Dice.js","components/rollarea/RollArea.js","components/board/Board.js","components/outcheckers/Outcheckers.js","components/NewGame/Confetti.js","components/NewGame/NewGame.js","components/Rules.js","components/Menu.js","components/statusPanel/StatusPanel.js","components/game/Game.js","App.js","index.js"],"names":["module","exports","checker","getStyle","clas","props","player","canMove","className","this","count","Component","StatusBar","calculateScore","scoreP1","scoreP2","points","map","point","index","checkers","jail","player1","player2","P1","P2","Panel","attributes","panelCanRecieve","stl","down","action","canReceive","dir","playAudio","document","getElementsByClassName","play","actions","color","onClick","children","src","require","OutChecker","getCheckers","amount","status","i","push","key","length","Dice","state","dots","Array","fill","fillDots","number","displayDots","dot","Math","random","RollArea","dices","rolldices","Board","DisplayCheckers","gameStatus","p1IsNext","outcheckers","classnamep1","classnamep2","actionP1","actionP2","out","p1CanReceive","p2CanReceive","undo","useWindowSize","height","width","style","overflow","numberOfPieces","NewGame","message","setupNewGameHandler","Fragment","Confetti","Transition","React","forwardRef","ref","Slide","direction","useStyles","makeStyles","theme","rules","textAlign","link","textDecoration","fontWeight","padding","img","borderRadius","margin","agree","border","backgroundColor","AlertDialogSlide","useState","open","setOpen","handleClose","classes","alt","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","href","target","DialogActions","Button","root","display","flexDirection","alignItems","spacing","buttons","BasicButtonGroup","ButtonGroup","variant","aria-label","size","StatusPanel","getGameStatus","diceNoMove","Game","history","currentPosition","dice","diceSave","movingChecker","players","p1","p2","gameOver","getPlayer","getPointsWithoutActions","getoutcheckersWithoutActions","getMovingChecker","setHistory","checkHomeBoard","homeBoard","checkCanBearOff","canBearOff","die","highDie","sort","reverse","checkerBehind","undoHandler","newPosition","console","log","moves","calculateCanMove","pop","setState","rollDiceHandler","floor","newPoints","destination","receiveCheckerHandler","bind","inHomeBoard","moveCheckerHandler","diceIndex","findIndex","dieNumber","splice","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c5d8658d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/panel.dec50ff3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dice.afd53a36.mp3\";","module.exports = __webpack_public_path__ + \"static/media/outcheckers.e3b896ba.mp3\";","module.exports = __webpack_public_path__ + \"static/media/winner.1768de81.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rules.3ebd6071.gif\";","import React, { Component } from 'react';\r\nimport './Checker.css';\r\n\r\nexport class checker extends Component {\r\n    \r\n    getStyle=()=>{\r\n        let clas=this.props.player;\r\n        if(this.props.canMove===1){\r\n            clas+=\" canMove\";\r\n        }        \r\n        return clas;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <div className={this.getStyle()}> \r\n        <div className=\"amount\">{this.props.count}</div>\r\n        </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default checker\r\n","import React, { Component } from 'react';\r\nimport './StatusBar.css';\r\nimport Checker from'../checker/Checker';\r\n\r\nexport class StatusBar extends Component {\r\n  \r\n    //Calculate score\r\n     calculateScore = () => {\r\n\r\n        let scoreP1 = 0;\r\n        let scoreP2 = 0;\r\n\r\n        this.props.points.map((point, index) => {\r\n\r\n            if (point.player) { //Check if the point belongs to a player\r\n                if (point.player === 1) { \r\n                    scoreP1 += (24 - index) * point.checkers\r\n                } else { \r\n                    scoreP2 += (index + 1) * point.checkers\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n\r\n        //Score from jail\r\n        if (this.props.jail.player1) {\r\n            scoreP1 += 25 * this.props.jail.player1;\r\n        }\r\n        if (this.props.jail.player2) {\r\n            scoreP2 += 25 * this.props.jail.player2;\r\n        }\r\n\r\n        return { 'P1': scoreP1, 'P2': scoreP2 };\r\n    }\r\n\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"statusBar\">\r\n                \r\n                <div className=\"mainHeader\">\r\n                    <div className=\"barPlayerStatus\"> \r\n                    <div className=\"barPlayerTitle\">Player 1</div>\r\n                    <div className=\"barChecker\"><Checker player=\"player1\"/></div>\r\n                    <div className=\"barPoints\">{this.calculateScore().P1}</div>\r\n                    </div>\r\n\r\n                    <div className=\"barTitle\"> \r\n                        <span>Game Bar</span>\r\n                    </div>\r\n\r\n                    <div className=\"barPlayerStatus\"> \r\n                    <div className=\"barPlayerTitle\">Player 2</div>\r\n                    <div className=\"barChecker\"><Checker player=\"player2\"/></div>\r\n                    <div className=\"barPoints\">{this.calculateScore().P2}</div>\r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default StatusBar\r\n","import React, { Component } from 'react';\r\nimport './Panel.css';\r\n\r\nexport class Panel extends Component {\r\n    \r\n    attributes=()=>{\r\n        let stl= 'checkersPlace '+this.props.down;// checkers\r\n        let action = null;\r\n        let panelCanRecieve;\r\n        \r\n        if (this.props.canMove){\r\n            stl+=' moveable';\r\n            action= this.props.canMove;\r\n        }\r\n        if (this.props.canReceive){\r\n            stl+=' reciveable';\r\n            action= this.props.canReceive;\r\n\r\n            panelCanRecieve= this.props.dir===\"up\"? \"UpRecieve\":\"BottomRecieve\" \r\n            \r\n        }\r\n\r\n        return {stl:stl, action:action,panelCanRecieve:panelCanRecieve };\r\n\r\n    }\r\n\r\n    playAudio=()=> {\r\n        const audioEl = document.getElementsByClassName(\"panelSound\")[0];\r\n        audioEl.play();\r\n      }\r\n     \r\n    actions=()=>{\r\n        this.playAudio();\r\n        if (this.attributes().action){\r\n        this.attributes().action();}\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"panel\">\r\n\r\n                <div className={this.props.color+'Left'+this.props.dir+    ' left'+this.attributes().panelCanRecieve} onClick={()=>{this.actions()}}></div>\r\n                <div className={this.props.color+'Right'+this.props.dir+   ' right'+this.attributes().panelCanRecieve} onClick={()=>{this.actions()}}></div>\r\n                <div className={this.attributes().stl} onClick={()=>{this.actions()}}> \r\n                {this.props.children}\r\n                </div>\r\n\r\n                <audio className=\"panelSound\">\r\n                 <source src={require('../../../sounds/panel.mp3')}></source>\r\n                </audio>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Panel\r\n","import React, { Component } from 'react';\r\nimport './OutChecker.css';\r\n\r\nexport class OutChecker extends Component {\r\n\r\n      \r\n    getStyle=()=>{\r\n        let clas=this.props.player;\r\n        if(this.props.canMove===1){\r\n            clas+=\" canMove\";\r\n        }\r\n        \r\n        return clas;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.getStyle()}></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OutChecker\r\n","import React from 'react';\r\nimport Checker from '../checker/Checker';\r\nimport OutChecker from '../checker/OutChecker';\r\n\r\nconst getCheckers = (player,amount,status,canMove) => {\r\n\r\n    if (amount!==0) {\r\n        const checkers = [];\r\n        //Get out of board checkers\r\n        if (status ===2){\r\n            for (let i = 0; i < amount; i++) {\r\n                checkers.push(<OutChecker player={player} key={i}/>);                          \r\n            }\r\n        }\r\n        //Get board checkers\r\n        else{\r\n            const count = amount > 5 ? 5 : amount;\r\n            for (let i = 0; i < count; i++) {\r\n                checkers.push(<Checker player={player} key={i}/>);                         \r\n            }\r\n        }\r\n            //If there are more than 5 checlers, mark the first one with number\r\n           if (amount > 5 && status !==2) {\r\n                checkers[checkers.length-1]= <Checker player={player} count={amount} key={5}/> ;    \r\n         \r\n         }\r\n            //If checker can move, mark the first one to move as green\r\n           if(canMove){\r\n            checkers[0]=  <Checker player={player} canMove={1}/>\r\n        }\r\n     \r\n        return checkers\r\n\r\n\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default getCheckers;","import React, { Component } from 'react';\r\nimport './Dice.css';\r\n\r\n\r\nexport class Dice extends Component {\r\n\r\n    state={\r\n        dots: Array(9).fill(null)\r\n    }\r\n\r\n    fillDots=()=>{\r\n        const {dots}= this.state;\r\n        switch (this.props.number) {\r\n            case 1:\r\n                dots[4] = true;\r\n                break;\r\n            case 2:\r\n                dots[0] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 3:\r\n                dots[0] = true;\r\n                dots[4] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 4:\r\n                dots[0] = true;\r\n                dots[2] = true;\r\n                dots[6] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 5:\r\n                dots[0] = true;\r\n                dots[2] = true;\r\n                dots[4] = true;\r\n                dots[6] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 6:\r\n                dots[0] = true;\r\n                dots[2] = true;\r\n                dots[3] = true;\r\n                dots[5] = true;\r\n                dots[6] = true;\r\n                dots[8] = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n  \r\n    displayDots=()=>{\r\n    this.fillDots();\r\n    return this.state.dots.map(dot=>\r\n        (dot===true)  ? <div className=\"dot\" key={Math.random()*10000000} ></div> : <div key={Math.random()*10000000}></div>);\r\n\r\n    }\r\n\r\n    playAudio=()=> {\r\n        const audioEl = document.getElementsByClassName(\"diceSound\")[0];\r\n        audioEl.play();\r\n      }\r\n\r\n    componentDidMount(){\r\n        this.playAudio();\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dice\">\r\n            {this.displayDots()}\r\n\r\n            <audio className=\"diceSound\">\r\n                 <source src={require('../../../sounds/dice.mp3')}></source>\r\n                </audio>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dice\r\n","import React, { Component } from 'react';\r\nimport './RollArea.css';\r\nimport './dice/Dice';\r\nimport Dice from './dice/Dice';\r\n\r\nexport class RollArea extends Component {\r\n \r\n    render() {\r\n        if (this.props.dices[0]!==0)\r\n            return (\r\n                <div className=\"rollarea\">\r\n                    <Dice number={this.props.dices[0]}/>\r\n                    <Dice number={this.props.dices[1]}/>\r\n                </div>)\r\n\r\n        return (\r\n            <div className=\"rollarea\">\r\n             <button className=\"button\" onClick={this.props.rolldices}>Roll Dices</button>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default RollArea\r\n","import React, { Component } from 'react'\r\nimport './Board.css';\r\nimport './panel/Panel';\r\nimport Panel from './panel/Panel';\r\nimport DisplayCheckers from '../displayCheckers/DisplayCheckers';\r\nimport RollArea from '../rollarea/RollArea';\r\n \r\n\r\n\r\nexport class Board extends Component {\r\n    render() {\r\n        return (\r\n     \r\n            <div className=\"board\">\r\n\r\n                <div className=\"boardUp\">\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[12].canMove}\r\n                    canReceive={this.props.points[12].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[12].player,this.props.points[12].checkers,1,this.props.points[12].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[13].canMove}\r\n                    canReceive={this.props.points[13].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[13].player,this.props.points[13].checkers,1,this.props.points[13].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[14].canMove}\r\n                    canReceive={this.props.points[14].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[14].player,this.props.points[14].checkers,1,this.props.points[14].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[15].canMove}\r\n                    canReceive={this.props.points[15].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[15].player,this.props.points[15].checkers,1,this.props.points[15].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[16].canMove}\r\n                    canReceive={this.props.points[16].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[16].player,this.props.points[16].checkers,1,this.props.points[16].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[17].canMove}\r\n                    canReceive={this.props.points[17].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[17].player,this.props.points[17].checkers,1,this.props.points[17].canMove)}</Panel>\r\n\r\n                                           <div className=\"jailUp\"> {DisplayCheckers(\"player1\", this.props.jail.player1,1)}</div>\r\n\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[18].canMove}\r\n                    canReceive={this.props.points[18].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[18].player,this.props.points[18].checkers,1,this.props.points[18].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[19].canMove}\r\n                    canReceive={this.props.points[19].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[19].player,this.props.points[19].checkers,1,this.props.points[19].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[20].canMove}\r\n                    canReceive={this.props.points[20].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[20].player,this.props.points[20].checkers,1,this.props.points[20].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[21].canMove}\r\n                    canReceive={this.props.points[21].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[21].player,this.props.points[21].checkers,1,this.props.points[21].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[22].canMove}\r\n                    canReceive={this.props.points[22].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[22].player,this.props.points[22].checkers,1,this.props.points[22].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[23].canMove}\r\n                    canReceive={this.props.points[23].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[23].player,this.props.points[23].checkers,1,this.props.points[23].canMove)}</Panel>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                        <span className=\"rollingInTheDeep\">\r\n                        <RollArea\r\n                                        gameStatus={this.props.gameStatus}\r\n                                        dices={this.props.dices}\r\n                                        rolldices={this.props.rolldices}\r\n                                        p1IsNext={this.props.p1IsNext}\r\n                                        />\r\n                        </span>\r\n            \r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"boardbottom\">\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[11].canMove}\r\n                    canReceive={this.props.points[11].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[11].player,this.props.points[11].checkers,1,this.props.points[11].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[10].canMove}\r\n                    canReceive={this.props.points[10].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[10].player,this.props.points[10].checkers,1,this.props.points[10].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[9].canMove}\r\n                    canReceive={this.props.points[9].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[9].player,this.props.points[9].checkers,1,this.props.points[9].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[8].canMove}\r\n                    canReceive={this.props.points[8].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[8].player,this.props.points[8].checkers,1,this.props.points[8].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[7].canMove}\r\n                    canReceive={this.props.points[7].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[7].player,this.props.points[7].checkers,1,this.props.points[7].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[6].canMove}\r\n                    canReceive={this.props.points[6].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[6].player,this.props.points[6].checkers,1,this.props.points[6].canMove)}</Panel>\r\n\r\n                                     <div className=\"jailDown\"> {DisplayCheckers(\"player2\", this.props.jail.player2,1)}</div>\r\n\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[5].canMove}\r\n                    canReceive={this.props.points[5].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[5].player,this.props.points[5].checkers,1,this.props.points[5].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[4].canMove}\r\n                    canReceive={this.props.points[4].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[4].player,this.props.points[4].checkers,1,this.props.points[4].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[3].canMove}\r\n                    canReceive={this.props.points[3].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[3].player,this.props.points[3].checkers,1,this.props.points[3].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[2].canMove}\r\n                    canReceive={this.props.points[2].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[2].player,this.props.points[2].checkers,1,this.props.points[2].canMove)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[1].canMove}\r\n                    canReceive={this.props.points[1].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[1].player,this.props.points[1].checkers,1,this.props.points[1].canMove)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[0].canMove}\r\n                    canReceive={this.props.points[0].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[0].player,this.props.points[0].checkers,1,this.props.points[0].canMove)}</Panel>\r\n                </div>\r\n\r\n             </div>\r\n       \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Board\r\n","import React, { Component } from 'react';\r\nimport './Outcheckers.css';\r\nimport DisplayCheckers from '../displayCheckers/DisplayCheckers';\r\n\r\nexport class outcheckers extends Component {\r\n   \r\n  attributes=()=>{\r\n    let classnamep1= \"outup \";\r\n    let classnamep2= \"outbottom \";\r\n    let actionP1=null;\r\n    let actionP2=null;\r\n\r\n    if (this.props.out.p1CanReceive){\r\n        classnamep1+=\" recieveableOut\";\r\n        actionP1=this.props.out.p1CanReceive;\r\n      }\r\n    if (this.props.out.p2CanReceive){\r\n      classnamep2+=\" recieveableOut\";\r\n        actionP2=this.props.out.p2CanReceive;\r\n      }\r\n\r\n      return {classnamep1: classnamep1,actionP1: actionP1,\r\n        classnamep2: classnamep2,actionP2: actionP2, }\r\n\r\n  }\r\n\r\n  playAudio=()=> {\r\n    const audioEl = document.getElementsByClassName(\"outcheckersSound\")[0];\r\n    audioEl.play();\r\n  }\r\n \r\n\r\n  actions=()=>{\r\n    if (this.attributes().actionP1){\r\n    this.attributes().actionP1();\r\n    this.playAudio();\r\n    }\r\n    if (this.attributes().actionP2){\r\n      this.attributes().actionP2();\r\n      this.playAudio();\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n        return (\r\n            <div className=\"outcheckers\">\r\n                <div className={this.attributes().classnamep1} onClick={()=>{this.actions()}}>\r\n                  <h1>Player 1</h1>\r\n                  {DisplayCheckers(\"player1out\", this.props.out.player1,2)}\r\n                </div>\r\n\r\n                <div className=\"undo\" onClick={this.props.undo}> Undo </div>\r\n\r\n                <div className={this.attributes().classnamep2} onClick={()=>{this.actions()}}>\r\n                  <h1 >Player 2</h1>\r\n                  {DisplayCheckers(\"player2out\", this.props.out.player2,2)}\r\n                </div>\r\n           \r\n                <audio className=\"outcheckersSound\">\r\n                 <source src={require('../../sounds/outcheckers.mp3')}></source>\r\n                </audio>\r\n\r\n           \r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default outcheckers\r\n","import React from 'react'\r\nimport useWindowSize from 'react-use/lib/useWindowSize'\r\nimport Confetti from 'react-confetti'\r\n \r\nexport default () => {\r\n  const { width, height } = useWindowSize()\r\n  return (\r\n    <Confetti\r\n      width={1500}\r\n      height={height}\r\n      style={{overflow:'none'}}\r\n      numberOfPieces={500}    />\r\n  )\r\n}\r\n ","import React, { Component } from 'react';\r\nimport './NewGame.css';\r\nimport Confetti from './Confetti';\r\n\r\nexport class NewGame extends Component {\r\n\r\n    message=()=>{\r\n    let content=\" \";\r\n\r\n    if(this.props.gameStatus===80){\r\n        content=\"Welcome buddy  !\"\r\n    }\r\n    else{\r\n     content=   this.props.gameStatus===60?\r\n    <div> Player 1 <br/>Is The <br/> Winner </div>\r\n    :\r\n    <div> Player 2 <br/>Is The <br/> Winner </div>\r\n    }\r\n\r\n    return content;\r\n    }\r\n\r\n    playAudio=()=> {\r\n        const audioEl = document.getElementsByClassName(\"winnerSound\")[0];\r\n        audioEl.play();\r\n      }\r\n\r\n    componentDidMount(){\r\n        if (this.props.gameStatus!==80)\r\n        this.playAudio();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n       if (this.props.gameStatus===80){\r\n        return (\r\n            <div className=\"newGame\" >\r\n            <div className=\"content\">\r\n            {this.message()}\r\n            </div>\r\n            <div className=\"startNewGame\" onClick={this.props.setupNewGameHandler} >\r\n            Click here to start new game\r\n            </div>\r\n        </div>);\r\n       }\r\n\r\n       else{\r\n        return (\r\n            <React.Fragment>\r\n            <Confetti/>\r\n            <div className=\"winner\" >\r\n                <div className=\"content\">\r\n                {this.message()}\r\n                </div>\r\n                <div className=\"startNewGame\" onClick={this.props.setupNewGameHandler} >\r\n                Click here to start new game\r\n                </div>\r\n\r\n                <audio className=\"winnerSound\">\r\n                 <source src={require('../../sounds/winner.mp3')}></source>\r\n                </audio>\r\n            </div>\r\n            </React.Fragment>\r\n            \r\n        );}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default NewGame\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rules:{\r\n    textAlign:'center',\r\n    color:'red'\r\n  },\r\n  link:{\r\n   textDecoration:'none',\r\n   textAlign:'center',\r\n   fontWeight:'bold',\r\n   padding:'5px',\r\n   color:'black',\r\n   '&:hover': {color:'red'},\r\n   '&:visited': {color:'black'},\r\n   '&:active': {color:'black'}\r\n  },\r\n  img:{\r\n    width:'70%',\r\n    height:'70%',\r\n    borderRadius:'50%',\r\n    margin:'auto'\r\n  },\r\n  agree:{\r\n    fontWeight:'bold',\r\n    color:'white',\r\n    border:'#f4f4f4 2px solid',\r\n    padding:'5px',\r\n    backgroundColor:\"#ccc\",\r\n\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function AlertDialogSlide() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n      <div>\r\n\r\n        <div onClick={handleClickOpen} alt=\"Rules\">Rules</div>\r\n      \r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <h2 className={classes.rules}>Rules !</h2> \r\n\r\n          <DialogContent>\r\n          <a href=\"https://en.wikipedia.org/wiki/Backgammon\"  target=\"blank\" className={classes.link} > Click here to go to backgamon rules on Wikipedia, I'm lazy :)</a>\r\n          </DialogContent>\r\n\r\n          <img src={require('../images/rules.gif')} alt=\"Rules\" className={classes.img}/>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleClose} >\r\n              <div className={classes.agree}>\r\n                Agree\r\n              </div>\r\n            </Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Rules from './Rules';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  \r\n  buttons:{\r\n   color:'brown',\r\n   fontWeight:'bold',\r\n   textDecoration:'none'\r\n  },\r\n  \r\n  link:{\r\n    textDecoration:'none',\r\n    color:'brown',\r\n    fontWeight:'bold'\r\n  }\r\n}));\r\n\r\nexport default function BasicButtonGroup() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup variant=\"text\"aria-label=\"text primary button group\" size=\"large\">\r\n        <Button  className={classes.buttons} >   <a className={classes.link} href=\"https://yossishemi.github.io/backgammonWeb/#/\"> HomePage</a> </Button>\r\n        <Button  className={classes.buttons} > <Rules/> </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './StatusPanel.css';\r\n\r\n\r\nexport class StatusPanel extends Component {\r\n   \r\n    getGameStatus=()=>{\r\n\r\n        let status= this.props.p1IsNext? \"Player 1 turn\": \"Player 2 turn\";\r\n    \r\n        if (this.props.gameStatus===80)\r\n        status=\"Welcome!\"\r\n        \r\n        if (this.props.gameStatus===60 || this.props.gameStatus===70){\r\n            this.props.gameStatus===60? \r\n            status=\"Player 1 Win !!!\"\r\n            :\r\n            status=\"Player 2 Win !!!\"\r\n            }\r\n         \r\n        if (this.props.gameStatus===50){\r\n            let player= this.props.p1IsNext? \"Player 2 turn\": \"Player 1 turn\";\r\n            status=`No moves avaliable! --- Dices: (\" ${this.props.diceNoMove[0]}, ${this.props.diceNoMove[1]} \") --- ${player}`;\r\n        }\r\n\r\n    \r\n        return status;\r\n       }\r\n\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"StatusPanel\">\r\n            {this.getGameStatus()} \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default StatusPanel\r\n","import React, { Component } from 'react';\r\nimport './Game.css';\r\nimport '../statusBar/StatusBar';\r\nimport Board from '../board/Board';\r\nimport StatusBar from '../statusBar/StatusBar';\r\nimport Outcheckers from '../outcheckers/Outcheckers';\r\nimport NewGame from '../NewGame/NewGame';\r\nimport Menu from '../Menu';\r\nimport StatusPanel from '../statusPanel/StatusPanel';\r\n\r\nexport class Game extends Component {\r\n  \r\n    //Initial state\r\n    state = {\r\n        gameStatus: 80, //not started\r\n        history: [],\r\n        currentPosition: 0,\r\n        p1IsNext: true,\r\n        dice: [0],\r\n        diceSave:[0],\r\n        diceNoMove:[0],\r\n        points: Array(24).fill({ player: false, checkers: 0 }),\r\n        jail: { player1: 0, player2: 0},\r\n        outcheckers: { player1: 15, player2: 15 },\r\n        movingChecker: false,\r\n        players: { p1: 'Player 1', p2: 'Player 2' },\r\n        gameOver: true,\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n/*Simple Functions*/ \r\n\r\n    //Get the game status\r\n    getGameStatus = () => {\r\n        switch (this.state.gameStatus) {\r\n            case 11: return \"New game\";\r\n            case 20: return \"Roll dice\";\r\n            case 30: return \"Playing\";\r\n            case 31: return \"Playing from jail\";\r\n            case 32: return \"Bearing off\";\r\n            case 40: return \"No die to play\";\r\n            case 50: return \"No moves available\";\r\n            case 60: return \"Player 1 wins\";\r\n            case 70: return \"Player 2 wins\";\r\n            case 80: return \"Not started\";\r\n            default: return this.state.gameStatus;\r\n        }\r\n    }\r\n    //Return the player number 1 or 2.\r\n    getPlayer = (p1IsNext) => p1IsNext ? 1 : 2;\r\n    //Get points without actions. It creates a new object\r\n    getPointsWithoutActions = (points) => points.map((point) => {\r\n            return { player: point.player, checkers: point.checkers };\r\n    });\r\n    getoutcheckersWithoutActions = (outcheckers) => {\r\n        return { player1: outcheckers.player1, player2: outcheckers.player2 }\r\n    }\r\n    getMovingChecker = (p1IsNext) => {\r\n        let movingChecker;\r\n        if (this.state.movingChecker !== false) { //Moving checker is assigned\r\n            movingChecker = this.state.movingChecker;\r\n        } else { //Checker coming from jail\r\n            if (p1IsNext) {\r\n                movingChecker = -1;\r\n            }\r\n            else {\r\n                movingChecker = 24;\r\n            }\r\n        }\r\n        return movingChecker;\r\n    }\r\n    //Set new history\r\n    setHistory = (p1IsNext, dice, points, jail, outcheckers, gameStatus) => {\r\n\r\n            const history = {\r\n                p1IsNext: p1IsNext,\r\n                dice: [...dice],\r\n                points: [...points],\r\n                jail: { ...jail },\r\n                outcheckers: { ...outcheckers },\r\n                gameStatus: gameStatus,\r\n            }\r\n            return history;\r\n    }\r\n        \r\n       \r\n\r\n\r\n\r\n\r\n/* \"Black boxes\" */ \r\n\r\n    //Check if player has all the checkers in the home board\r\n    checkHomeBoard = (points, p1IsNext) => {\r\n\r\n        //Checkers in homeboard. If true it's good to go outside\r\n        let homeBoard = true;\r\n\r\n        //get points with actions\r\n        points.map((point, index) => {\r\n\r\n            //Check homeboard\r\n            //Player 1\r\n            if (p1IsNext && index <= 17\r\n                && point.player === 1\r\n            ) {\r\n                homeBoard = false;\r\n            }\r\n            //Player 2\r\n            else if (!p1IsNext && index >= 6\r\n                && point.player === 2\r\n            ) {\r\n                homeBoard = false;\r\n            }\r\n\r\n            return null;\r\n\r\n        });\r\n\r\n        return homeBoard;\r\n\r\n    }\r\n    //Check if checker can bear off\r\n    checkCanBearOff = (points, checker, p1IsNext, dice) => {\r\n\r\n        let canBearOff = false;\r\n\r\n        //Check if it is a player checker\r\n        if (checker >= 0 && checker < 24 && points[checker].player === this.getPlayer(p1IsNext)) {\r\n\r\n            for (let die of dice) {\r\n                //check if the dice have the right number to bear off\r\n                if ((p1IsNext && (checker + die) === 24) || (!p1IsNext && (checker - die) === -1)) {\r\n                    canBearOff = die;\r\n                }\r\n            }\r\n\r\n            if (!canBearOff) {\r\n\r\n                const highDie = [...dice].sort().reverse()[0]; //Get the highest die\r\n                let checkerBehind = false;//Check if there is checker behind the moving checker\r\n\r\n                //die is more than necessary to bear off\r\n                if ((p1IsNext && (checker + highDie) > 24) || (!p1IsNext && (checker - highDie) < -1)) {\r\n\r\n                    if (p1IsNext) {\r\n                        for (let i = 18; i < checker; i++) {\r\n                            if (points[i].player && points[i].player === this.getPlayer(p1IsNext)) {\r\n                                checkerBehind = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 5; i > checker; i--) {\r\n                            if (points[i].player && points[i].player === this.getPlayer(p1IsNext)) {\r\n                                checkerBehind = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //If there is no checker behind, it can bear off\r\n                    if (!checkerBehind) {\r\n                        canBearOff = highDie;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return canBearOff;\r\n    } \r\n\r\n\r\n\r\n\r\n\r\n/*Actual game functions*/ \r\n\r\n    undoHandler = () => {\r\n        \r\n        if (this.state.currentPosition>0){\r\n        const history = [...this.state.history];\r\n        const newPosition = this.state.currentPosition - 1;\r\n        const p1IsNext = history[newPosition].p1IsNext;\r\n        const dice = [...history[newPosition].dice];\r\n        const jail = { ...history[newPosition].jail };\r\n        const outcheckers = { ...history[newPosition].outcheckers };\r\n        const movingChecker = false;\r\n\r\n        console.log('Undo last move');\r\n\r\n        const moves = this.calculateCanMove(this.state.history[newPosition].points, dice, p1IsNext, jail);\r\n        const points = moves.points;\r\n        const gameStatus = moves.gameStatus;\r\n        //remove last element from history\r\n        history.pop();\r\n\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: newPosition,\r\n            p1IsNext: p1IsNext,\r\n            dice: dice,\r\n            points: points,\r\n            jail: jail,\r\n            outcheckers: outcheckers,\r\n            movingChecker: movingChecker\r\n        });\r\n    }\r\n    }\r\n        // Game Over\r\n    gameOver = () => {\r\n\r\n            if (this.state.gameOver) {\r\n                return <NewGame\r\n                    gameStatus={this.state.gameStatus}\r\n                    setupNewGameHandler={this.setupNewGameHandler}\r\n                />;\r\n            }\r\n    \r\n    } \r\n    \r\n\r\n  \r\n\r\n\r\n\r\n/*Complicated madafaka functions*/\r\n \r\n    //set up new game\r\n    setupNewGameHandler = () => {\r\n        \r\n        const gameStatus = 11; //New game\r\n        const history = [];\r\n        const currentPosition = 0\r\n        const p1IsNext =  true ;\r\n        const dice = [0];\r\n        const diceSave=[0];\r\n        const points = Array(24).fill({ player: false, checkers: 0 });\r\n        const jail = { player1: 0, player2: 0 };\r\n        const outcheckers = { player1: 14, player2: 14 };\r\n        const movingChecker = false;\r\n        const players = { p1: \"player1\", p2: \"player2\"};\r\n\r\n        history.push(this.setHistory(p1IsNext, dice, points, jail, outcheckers));\r\n\r\n        //set points\r\n        /*\r\n        points[0] = { player: 1, checkers: 2 };\r\n        points[11] = { player: 1, checkers: 5 };\r\n        points[16] = { player: 1, checkers: 3 };\r\n        points[18] = { player: 1, checkers: 5 };\r\n        points[23] = { player: 2, checkers: 2 };\r\n        points[12] = { player: 2, checkers: 5 };\r\n        points[7] = { player: 2, checkers: 3 };\r\n        points[5] = { player: 2, checkers: 5 };\r\n        */\r\n        points[2] = { player: 2, checkers: 1 };\r\n        points[20] = { player: 1, checkers: 1 };\r\n    \r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: currentPosition,\r\n            p1IsNext: p1IsNext,\r\n            dice: dice,\r\n            diceSave: diceSave,\r\n            points: points,\r\n            jail: jail,\r\n            outcheckers: outcheckers,\r\n            movingChecker: movingChecker,\r\n            players: players,\r\n            gameOver:false\r\n        });\r\n\r\n    }\r\n\r\n    //Roll dices\r\n    rollDiceHandler = () => {\r\n\r\n        let p1IsNext =  this.state.p1IsNext;\r\n        let dice = [];\r\n        let diceSave=[];\r\n        dice.push(Math.floor(Math.random() * 6) + 1);\r\n        dice.push(Math.floor(Math.random() * 6) + 1);\r\n        if (dice[0] === dice[1]) {\r\n            dice[2] = dice[3] = dice[0];\r\n        }\r\n        diceSave=[...dice];\r\n        const diceNoMove=[...dice]; // to status bar-  to show number of dices when no moves avaliable and dice are deleted\r\n        this.setState({diceNoMove:diceNoMove});\r\n        console.log(\"Rolled dice: \" + dice);\r\n\r\n        //Get moves and status after calculating moves option\r\n        const moves = this.calculateCanMove(\r\n            this.getPointsWithoutActions(this.state.points),\r\n            dice,\r\n            p1IsNext,\r\n            this.state.jail\r\n        );\r\n\r\n        //get points and status\r\n        const points = moves.points;\r\n        let gameStatus = moves.gameStatus;\r\n       \r\n        //reset history\r\n        const currentPosition = 0;\r\n        const history = [];\r\n        history.push(this.setHistory(\r\n            p1IsNext,\r\n            dice,\r\n            points,\r\n            this.state.jail,\r\n            this.state.outcheckers,\r\n            gameStatus\r\n        ));\r\n\r\n        //If no moves avaliable\r\n        if (gameStatus===50){\r\n            p1IsNext=!p1IsNext;\r\n            dice[0]=0;\r\n            diceSave[0]=0;\r\n            this.setState({\r\n                gameStatus: gameStatus,\r\n                points: points,\r\n                dice: dice,\r\n                diceSave:diceSave,\r\n                p1IsNext: p1IsNext,\r\n            });      \r\n        }\r\n        //Set new state\r\n        else{\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: currentPosition,\r\n            points: points,\r\n            dice: dice,\r\n            diceSave:diceSave,\r\n            p1IsNext: p1IsNext,\r\n        });\r\n     }\r\n    }\r\n\r\n    //Calculate possible moves return an object with new points and game status\r\n    calculateCanMove = (points, dice, p1IsNext, jail) => {\r\n\r\n        let newPoints = [...points];\r\n        let gameStatus = 50; //No moves available\r\n        \r\n        if (!dice[0]) {gameStatus = 40; } // No dice to play\r\n       \r\n        else {\r\n\r\n            //check if there is checker on gray Bar\r\n            if ((p1IsNext && jail.player1) ||\r\n                (!p1IsNext && jail.player2)) {\r\n                for (let die of dice) {\r\n                    const destination = p1IsNext ? die - 1 : 24 - die;\r\n                    if (points[destination].player === this.getPlayer(p1IsNext) || //point belongs to user\r\n                        points[destination].checkers < 2) { //point is empty or belongs to other user but with only one checker\r\n                        newPoints[destination].canReceive = this.receiveCheckerHandler.bind(this, die);\r\n                        gameStatus = 31; //Playing from jail\r\n                    }\r\n                    this.setState({movingChecker:false});\r\n                }\r\n            }\r\n\r\n            else {\r\n                //check if all checkers in homeboard\r\n                const inHomeBoard = this.checkHomeBoard(newPoints, p1IsNext); \r\n               //check all panels on board\r\n                for (let index = 0; index < points.length; index++) {\r\n                    let canMove = false;\r\n                    //check if checkers on a panel can move with the dices\r\n                    if (points[index].player === this.getPlayer(p1IsNext)) {\r\n                        for (let die of dice) {\r\n                            const destination = p1IsNext ? index + die : index - die;\r\n                            if (!canMove && destination < 24 && destination >= 0) {\r\n                                if (points[destination].player === this.getPlayer(p1IsNext) ||\r\n                                    points[destination].checkers < 2) {\r\n                                    canMove = true;\r\n                                    gameStatus = 30; //Playing\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //check if can bear off\r\n                    if (inHomeBoard && ((p1IsNext && index >= 18) || (!p1IsNext && index <= 5))) {\r\n                        if (this.checkCanBearOff(points, index, p1IsNext, dice)) {\r\n                            canMove = true;\r\n                            gameStatus = 32; //Bearing off\r\n                        }\r\n                    }\r\n                    // change the status of the checker\r\n                    if (canMove) {\r\n                        newPoints[index].canMove = this.moveCheckerHandler.bind(this, index);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n       \r\n        return { points: newPoints, gameStatus: gameStatus };\r\n    }\r\n\r\n    //Clicked checker marks the optional panels to move to and mark them as !!!receiveCheckerHandler!!!\r\n    moveCheckerHandler = (checker) => {\r\n\r\n        let gameStatus = 30; //playing\r\n        const p1IsNext = this.state.p1IsNext;\r\n        const outcheckers = this.getoutcheckersWithoutActions(this.state.outcheckers);\r\n        let points = this.getPointsWithoutActions(this.state.points);\r\n        \r\n        // if clicked twice- cancel the mark as movingchecker\r\n        const movingChecker = checker !== this.state.movingChecker ? checker : false;\r\n\r\n        //if there is clicked checeker\r\n        if (movingChecker !== false) {\r\n           \r\n            //add action to the moving checker. This uncheck the moving checker\r\n            points[movingChecker].canMove = this.moveCheckerHandler.bind(this, movingChecker);\r\n\r\n            //mark the two optional panels to moce if playing inside the board\r\n            for (let die of this.state.dice) {\r\n                const destination = p1IsNext ? movingChecker + die : movingChecker - die;\r\n                if (destination < 24 && destination >= 0) {\r\n                    //Check if destnation can receive the checker\r\n                    if (points[destination].player === this.getPlayer(p1IsNext) ||\r\n                        points[destination].checkers < 2) {\r\n                        // mark them as !!!receiveCheckerHandler!!!\r\n                        points[destination].canReceive = this.receiveCheckerHandler.bind(this, die); \r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Bearing off\r\n            if (this.checkHomeBoard(points, p1IsNext) &&\r\n                ((p1IsNext && movingChecker >= 18) || (!p1IsNext && movingChecker <= 5))) {\r\n                    console.log(\"Home board clean\");\r\n                //Get the dice to bear off with\r\n                let die = this.checkCanBearOff(points, movingChecker, p1IsNext, this.state.dice);\r\n                // mark outCheckers as !!!receiveCheckerHandler!!! \r\n                if (die) {\r\n                        console.log(\"Can bear off\");\r\n                    if (p1IsNext) {\r\n                        outcheckers.p1CanReceive = this.receiveCheckerHandler.bind(this, die);                        \r\n                    } else {\r\n                        outcheckers.p2CanReceive = this.receiveCheckerHandler.bind(this, die);\r\n                    }\r\n                    gameStatus = 32; //Bearing off\r\n                }\r\n                \r\n            }\r\n\r\n            console.log(\"moving checker from point \" + (p1IsNext ? movingChecker + 1 : 24 - movingChecker));\r\n        }\r\n        //if checker is clicked twice- search new moves avaliavle again\r\n        else {\r\n            const moves = this.calculateCanMove(points, this.state.dice, this.state.p1IsNext, this.state.jail);\r\n            points = moves.points;\r\n            gameStatus = moves.gameStatus;\r\n        }\r\n\r\n\r\n        //Set new state\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            points: points,\r\n            movingChecker: movingChecker,\r\n            outcheckers: outcheckers,\r\n        })\r\n\r\n    }\r\n\r\n    //Receive checker into the point\r\n    receiveCheckerHandler = (die) => {\r\n        const jail = { ...this.state.jail };\r\n        const outcheckers = this.getoutcheckersWithoutActions(this.state.outcheckers);\r\n        const dice = [...this.state.dice];\r\n        let p1IsNext = this.state.p1IsNext;\r\n        let points = this.state.points;\r\n        let movingChecker = this.getMovingChecker(p1IsNext); //get the moving checker or jail (-1 or 24)\r\n        let gameStatus = 30; //playing\r\n        const destination = p1IsNext ? movingChecker + die : movingChecker - die; // the panel the checker moving to\r\n        //Logging\r\n        if (destination > 23 || destination < 0) {\r\n            console.log('Bearing off Checker');\r\n        } else {\r\n            console.log('Moving checker to point ' + (p1IsNext ? destination + 1 : 24 - destination));\r\n        }\r\n\r\n\r\n\r\n\r\n        /*Removing */\r\n        //Remove the checker from orign and clean point if it has no checker\r\n        if (movingChecker >= 0 && movingChecker <= 23 &&  points[movingChecker]) {\r\n            points[movingChecker].checkers--;\r\n            if (points[movingChecker].checkers === 0) {\r\n                points[movingChecker].player = false; \r\n            }\r\n        }\r\n        //remove from jail\r\n        else { \r\n            if (movingChecker === -1) {//remove p1 from gray bar\r\n                jail.player1--;\r\n            }\r\n            else if (movingChecker === 24) { //remove p2 from gray bar\r\n                jail.player2--;\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        /*Adding */\r\n        //Moving checker inside the board\r\n        if (destination <= 23 && destination >= 0) {\r\n            //Point either belongs to player or to nobody\r\n            if (points[destination].player === this.getPlayer(p1IsNext)\r\n                || points[destination].player === false) { \r\n                points[destination].player=this.getPlayer(p1IsNext);\r\n                points[destination].checkers++;\r\n            }\r\n            //Destination has different player with 1 checker, send to jail.\r\n            else { \r\n                if (p1IsNext) {\r\n                    jail.player2++\r\n                } else {\r\n                    jail.player1++\r\n                }\r\n            }\r\n            //Assign destination point to player. In this case destination has only one checker\r\n            points[destination].player = this.getPlayer(p1IsNext);\r\n        }\r\n        //If not playing inside, it mens the checker is bearing off\r\n        else {\r\n            if (p1IsNext) {\r\n                outcheckers.player1++;\r\n            } else {\r\n                outcheckers.player2++;\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        /*Reseting to find new moves after checker moved*/\r\n        movingChecker = false; // cancel moving checker\r\n        const diceIndex = dice.findIndex((dieNumber) => dieNumber === die); // remove the die played\r\n        dice.splice(diceIndex, 1);\r\n        console.log(\"Played die \" + die);\r\n        for(let point of points){// reset all panels\r\n                point.canReceive=false;\r\n                point.canMove=false;}\r\n                console.log(\"All false\");     \r\n        const moves = this.calculateCanMove(points, dice, p1IsNext, jail);// find new moves\r\n        points = moves.points;\r\n        gameStatus = moves.gameStatus;\r\n        //Change player if no die\r\n        if (dice.length === 0 ||gameStatus===50) {\r\n            dice[0] = 0;\r\n            p1IsNext = !p1IsNext;\r\n            this.setState(\r\n               {diceSave:[0]}\r\n            );\r\n        }  \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n        //Add this move to the history in order to be able to Undo\r\n        const currentPosition = this.state.currentPosition + 1;\r\n        const history = [...this.state.history];\r\n        history.push(this.setHistory(p1IsNext, dice, points, jail, outcheckers));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //Check if we have a winner\r\n        if (outcheckers.player1 === 15) {\r\n            gameStatus = 60; //Player one wins\r\n            this.setState({gameOver:true});\r\n        } else if (outcheckers.player2 === 15) {\r\n            gameStatus = 70; //Player two wins\r\n            this.setState({gameOver:true});\r\n        }\r\n        \r\n        \r\n\r\n\r\n\r\n        \r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: currentPosition,\r\n            p1IsNext: p1IsNext,\r\n            dice: dice,\r\n            points: points,\r\n            jail: jail,\r\n            outcheckers: outcheckers,\r\n            movingChecker: null,\r\n        })\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n\r\n                <StatusBar\r\n                points={this.state.points}\r\n                jail= {this.state.jail}\r\n                gameStatus= {this.state.gameStatus}\r\n                p1IsNext={this.state.p1IsNext}\r\n                />\r\n\r\n                <Menu/>\r\n\r\n                <div>\r\n                     <StatusPanel\r\n                        gameStatus= {this.state.gameStatus}\r\n                        p1IsNext={this.state.p1IsNext}\r\n                        diceNoMove={this.state.diceNoMove}\r\n                        />\r\n                    <div className=\"gamezone\">\r\n                    <Board \r\n                    points={this.state.points}\r\n                    jail={this.state.jail}\r\n                    gameStatus={this.state.gameStatus}\r\n                    dices={this.state.diceSave}\r\n                    rolldices={this.rollDiceHandler}\r\n                    p1IsNext={this.state.p1IsNext}\r\n                    />  \r\n                    <Outcheckers \r\n                    out={this.state.outcheckers}\r\n                    undo={this.undoHandler}\r\n                    />\r\n                     </div>\r\n                </div>\r\n                \r\n                {this.gameOver()}\r\n            </div>           \r\n        )\r\n    }\r\n}\r\nexport default Game\r\n","import React, { Component } from 'react';\nimport Game from './components/game/Game';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Game/>\n      </div>\n    )\n  } \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
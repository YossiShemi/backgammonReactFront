{"version":3,"sources":["components/checker/Checker.js","components/statusBar/StatusBar.js","components/board/panel/Panel.js","components/checker/OutChecker.js","components/displayCheckers/DisplayCheckers.js","components/rollarea/dice/Dice.js","components/rollarea/RollArea.js","components/board/Board.js","components/outcheckers/Outcheckers.js","components/NewGame/NewGame.js","components/game/Game.js","App.js","index.js"],"names":["checker","className","this","props","player","count","Component","StatusBar","calculateScore","scoreP1","scoreP2","points","map","point","index","checkers","jail","player1","player2","getGameStatus","status","p1IsNext","gameStatus","P1","P2","Panel","attributes","stl","down","action","panelCanRecieve","canMove","canReceive","color","dir","onClick","children","OutChecker","getCheckers","amount","i","push","key","Dice","state","dots","Array","fill","fillDots","number","displayDots","dot","Math","random","RollArea","dices","rolldices","Board","DisplayCheckers","outcheckers","classnamep1","classnamep2","actionP1","actionP2","out","p1CanReceive","p2CanReceive","undo","NewGame","message","setupNewGameHandler","Game","history","currentPosition","dice","diceSave","movingChecker","players","p1","p2","gameOver","setHistory","setState","undoHandler","newPosition","console","log","moves","calculateCanMove","pop","getPlayer","getPointsWithoutActions","getoutcheckersWithoutActions","checkHomeBoard","homeBoard","checkCanBearOff","canBearOff","die","highDie","sort","reverse","checkerBehind","getMovingChecker","rollDiceHandler","floor","newPoints","destination","receiveCheckerHandler","bind","inHomeBoard","length","moveCheckerHandler","diceIndex","findIndex","dieNumber","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8782addd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Checker.css';\r\n\r\nexport class checker extends Component {\r\n    render() {\r\n        return (\r\n        <div className={this.props.player}> \r\n        <div className=\"amount\">{this.props.count}</div>\r\n        </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default checker\r\n","import React, { Component } from 'react';\r\nimport './StatusBar.css';\r\nimport Checker from'../checker/Checker';\r\n\r\nexport class StatusBar extends Component {\r\n  \r\n    //Calculate score\r\n     calculateScore = () => {\r\n\r\n        let scoreP1 = 0;\r\n        let scoreP2 = 0;\r\n\r\n        this.props.points.map((point, index) => {\r\n\r\n            if (point.player) { //Check if the point belongs to a player\r\n\r\n                if (point.player === 1) { //if player 1\r\n                    scoreP1 += (24 - index) * point.checkers\r\n                } else { //if player 2\r\n                    scoreP2 += (index + 1) * point.checkers\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n\r\n        //Score from jail\r\n        if (this.props.jail.player1) {\r\n            scoreP1 += 25 * this.props.jail.player1;\r\n        }\r\n        if (this.props.jail.player2) {\r\n            scoreP2 += 25 * this.props.jail.player2;\r\n        }\r\n\r\n        return { 'P1': scoreP1, 'P2': scoreP2 };\r\n    }\r\n\r\n    getGameStatus=()=>{\r\n\r\n        let status= this.props.p1IsNext? \"Player 1 turn\": \"Player 2 turn\";\r\n    \r\n        if (this.props.gameStatus===80)\r\n        status=\"Welcome!\"\r\n        \r\n        if (this.props.gameStatus===60 || this.props.gameStatus===70){\r\n            this.props.gameStatus===60? \r\n            status=\"Player 1 Win !!!\"\r\n            :\r\n            status=\"Player 2 Win !!!\"\r\n            }\r\n         \r\n        if (this.props.gameStatus===50){\r\n            let player= this.props.p1IsNext? \"Player 2 turn\": \"Player 1 turn\";\r\n            status=\"No moves avaliable, \"+player;\r\n        }\r\n\r\n    \r\n        return status;\r\n       }\r\n\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"statusBar\">\r\n                \r\n                <div className=\"mainHeader\">\r\n                    <div className=\"barPlayerStatus\"> \r\n                    <div className=\"barPlayerTitle\">Player 1</div>\r\n                    <div className=\"barChecker\"><Checker player=\"player1\"/></div>\r\n                    <div className=\"barPoints\">{this.calculateScore().P1}</div>\r\n                    </div>\r\n\r\n                    <div className=\"barTitle\"> \r\n                        <span>Game Bar</span>\r\n                        <div className=\"gameStatus\">\r\n                          {this.getGameStatus()} \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"barPlayerStatus\"> \r\n                    <div className=\"barPlayerTitle\">Player 2</div>\r\n                    <div className=\"barChecker\"><Checker player=\"player2\"/></div>\r\n                    <div className=\"barPoints\">{this.calculateScore().P2}</div>\r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default StatusBar\r\n","import React, { Component } from 'react';\r\nimport './Panel.css';\r\n\r\nexport class Panel extends Component {\r\n    \r\n    attributes=()=>{\r\n        let stl= 'checkersPlace '+this.props.down;\r\n        let action = null;\r\n        let panelCanRecieve= \" \";\r\n        \r\n        if (this.props.canMove){\r\n            stl+=' moveable';\r\n            action= this.props.canMove;\r\n        }\r\n        if (this.props.canReceive){\r\n            stl+=' reciveable';\r\n            panelCanRecieve+=' reciveable';\r\n            action= this.props.canReceive;\r\n        }\r\n        return {stl:stl, action:action,panelCanRecieve:panelCanRecieve };\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"panel\">\r\n                <div className={this.props.color+'Left'+this.props.dir+this.attributes().panelCanRecieve} onClick={this.attributes().action}></div>\r\n                <div className={this.props.color+'Right'+this.props.dir+this.attributes().panelCanRecieve} onClick={this.attributes().action}></div>\r\n                <div className={this.attributes().stl} onClick={this.attributes().action}> \r\n                {this.props.children}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Panel\r\n","import React, { Component } from 'react';\r\nimport './OutChecker.css';\r\n\r\nexport class OutChecker extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.player}></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OutChecker\r\n","import React from 'react';\r\nimport Checker from '../checker/Checker';\r\nimport OutChecker from '../checker/OutChecker';\r\n\r\nconst getCheckers = (player,amount,status) => {\r\n\r\n    if (amount!==0) {\r\n        //checkers array\r\n        const checkers = [];\r\n       \r\n         //Get out of board checkers\r\n        if (status ===2){\r\n            for (let i = 0; i < amount; i++) {\r\n                checkers.push(<OutChecker player={player} key={i}/>);                          \r\n            }\r\n        }\r\n        \r\n        //Get board checkers\r\n        else{\r\n            const count = amount > 5 ? 5 : amount;\r\n\r\n            for (let i = 0; i < count; i++) {\r\n                checkers.push(<Checker player={player} key={i}/>);                         \r\n            }\r\n        }\r\n\r\n           if (amount > 5 && status !==2) {\r\n            checkers[0]= <Checker player={player} count={amount} key={5}/> ;    \r\n        }\r\n     \r\n        return checkers\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default getCheckers;","import React, { Component } from 'react';\r\nimport './Dice.css';\r\n\r\n\r\nexport class Dice extends Component {\r\n\r\n    state={\r\n        dots: Array(9).fill(null)\r\n    }\r\n\r\n    fillDots=()=>{\r\n        const {dots}= this.state;\r\n        switch (this.props.number) {\r\n            case 1:\r\n                dots[4] = true;\r\n                break;\r\n            case 2:\r\n                dots[0] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 3:\r\n                dots[0] = true;\r\n                dots[4] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 4:\r\n                dots[0] = true;\r\n                dots[2] = true;\r\n                dots[6] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 5:\r\n                dots[0] = true;\r\n                dots[2] = true;\r\n                dots[4] = true;\r\n                dots[6] = true;\r\n                dots[8] = true;\r\n                break;\r\n            case 6:\r\n                dots[0] = true;\r\n                dots[2] = true;\r\n                dots[3] = true;\r\n                dots[5] = true;\r\n                dots[6] = true;\r\n                dots[8] = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    displayDots=()=>{\r\n    this.fillDots();\r\n    return this.state.dots.map(dot=>\r\n        (dot===true)  ? <div className=\"dot\" key={Math.random()*10000000} ></div> : <div key={Math.random()*10000000}></div>);\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dice\">\r\n            {this.displayDots()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dice\r\n","import React, { Component } from 'react';\r\nimport './RollArea.css';\r\nimport './dice/Dice';\r\nimport Dice from './dice/Dice';\r\n\r\nexport class RollArea extends Component {\r\n \r\n    render() {\r\n        if (this.props.dices[0]!==0)\r\n            return (\r\n                <div className=\"rollarea\">\r\n                    <Dice number={this.props.dices[0]}/>\r\n                    <Dice number={this.props.dices[1]}/>\r\n                </div>)\r\n\r\n        return (\r\n            <div className=\"rollarea\">\r\n             <button className=\"button\" onClick={this.props.rolldices}>Roll Dices</button>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default RollArea\r\n","import React, { Component } from 'react'\r\nimport './Board.css';\r\nimport './panel/Panel';\r\nimport Panel from './panel/Panel';\r\nimport DisplayCheckers from '../displayCheckers/DisplayCheckers';\r\nimport RollArea from '../rollarea/RollArea';\r\n \r\n\r\n\r\nexport class Board extends Component {\r\n    render() {\r\n        return (\r\n     \r\n            <div className=\"board\">\r\n\r\n                <div className=\"boardUp\">\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[12].canMove}\r\n                    canReceive={this.props.points[12].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[12].player,this.props.points[12].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[13].canMove}\r\n                    canReceive={this.props.points[13].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[13].player,this.props.points[13].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[14].canMove}\r\n                    canReceive={this.props.points[14].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[14].player,this.props.points[14].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[15].canMove}\r\n                    canReceive={this.props.points[15].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[15].player,this.props.points[15].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[16].canMove}\r\n                    canReceive={this.props.points[16].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[16].player,this.props.points[16].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[17].canMove}\r\n                    canReceive={this.props.points[17].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[17].player,this.props.points[17].checkers)}</Panel>\r\n\r\n                                                  <div className=\"jailUp\"> {DisplayCheckers(\"player1\", this.props.jail.player1)}</div>\r\n\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[18].canMove}\r\n                    canReceive={this.props.points[18].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[18].player,this.props.points[18].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[19].canMove}\r\n                    canReceive={this.props.points[19].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[19].player,this.props.points[19].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[20].canMove}\r\n                    canReceive={this.props.points[20].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[20].player,this.props.points[20].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[21].canMove}\r\n                    canReceive={this.props.points[21].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[21].player,this.props.points[21].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[22].canMove}\r\n                    canReceive={this.props.points[22].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[22].player,this.props.points[22].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"up\" className=\"panel\"\r\n                    canMove={this.props.points[23].canMove}\r\n                    canReceive={this.props.points[23].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[23].player,this.props.points[23].checkers)}</Panel>\r\n                </div>\r\n\r\n\r\n                        <span className=\"rollingInTheDeep\">\r\n                        <RollArea\r\n                                        gameStatus={this.props.gameStatus}\r\n                                        dices={this.props.dices}\r\n                                        rolldices={this.props.rolldices}\r\n                                        p1IsNext={this.props.p1IsNext}\r\n                                        />\r\n                        </span>\r\n            \r\n\r\n\r\n                <div className=\"boardbottom\">\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[11].canMove}\r\n                    canReceive={this.props.points[11].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[11].player,this.props.points[11].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[10].canMove}\r\n                    canReceive={this.props.points[10].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[10].player,this.props.points[10].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[9].canMove}\r\n                    canReceive={this.props.points[9].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[9].player,this.props.points[9].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[8].canMove}\r\n                    canReceive={this.props.points[8].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[8].player,this.props.points[8].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[7].canMove}\r\n                    canReceive={this.props.points[7].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[7].player,this.props.points[7].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[6].canMove}\r\n                    canReceive={this.props.points[6].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[6].player,this.props.points[6].checkers)}</Panel>\r\n\r\n                                     <div className=\"jailDown\"> {DisplayCheckers(\"player2\", this.props.jail.player2)}</div>\r\n\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[5].canMove}\r\n                    canReceive={this.props.points[5].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[5].player,this.props.points[5].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[4].canMove}\r\n                    canReceive={this.props.points[4].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[4].player,this.props.points[4].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[3].canMove}\r\n                    canReceive={this.props.points[3].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[3].player,this.props.points[3].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[2].canMove}\r\n                    canReceive={this.props.points[2].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[2].player,this.props.points[2].checkers)}</Panel>\r\n                    <Panel color=\"black\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[1].canMove}\r\n                    canReceive={this.props.points[1].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[1].player,this.props.points[1].checkers)}</Panel>\r\n                    <Panel color=\"white\" dir=\"bottom\" className=\"panel\" down=\"down\"\r\n                    canMove={this.props.points[0].canMove}\r\n                    canReceive={this.props.points[0].canReceive}\r\n                    > {DisplayCheckers(\"player\"+this.props.points[0].player,this.props.points[0].checkers)}</Panel>\r\n                </div>\r\n\r\n             </div>\r\n       \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Board\r\n","import React, { Component } from 'react';\r\nimport './Outcheckers.css';\r\nimport DisplayCheckers from '../displayCheckers/DisplayCheckers';\r\n\r\nexport class outcheckers extends Component {\r\n   \r\n  attributes=()=>{\r\n    let classnamep1= \"outup \";\r\n    let classnamep2= \"outbottom \";\r\n    let actionP1=null;\r\n    let actionP2=null;\r\n\r\n    if (this.props.out.p1CanReceive){\r\n        classnamep1+=\" recieveableOut\";\r\n        actionP1=this.props.out.p1CanReceive;\r\n      }\r\n    if (this.props.out.p2CanReceive){\r\n      classnamep2+=\" recieveableOut\";\r\n        actionP2=this.props.out.p2CanReceive;\r\n      }\r\n\r\n      return {classnamep1: classnamep1,actionP1: actionP1,\r\n        classnamep2: classnamep2,actionP2: actionP2, }\r\n\r\n  }\r\n\r\n  render() {\r\n        return (\r\n            <div className=\"outcheckers\">\r\n                <div className={this.attributes().classnamep1} onClick={this.attributes().actionP1}>\r\n                  <h1>Player 1</h1>\r\n                  {DisplayCheckers(\"player1out\", this.props.out.player1,2)}\r\n                </div>\r\n\r\n                <div className=\"undo\" onClick={this.props.undo}> Undo </div>\r\n\r\n                <div className={this.attributes().classnamep2} onClick={this.attributes().actionP2}>\r\n                  <h1 >Player 2</h1>\r\n                  {DisplayCheckers(\"player2out\", this.props.out.player2,2)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default outcheckers\r\n","import React, { Component } from 'react';\r\nimport './NewGame.css';\r\n\r\nexport class NewGame extends Component {\r\n\r\n    message=()=>{\r\n    let content=\" \";\r\n\r\n    if(this.props.gameStatus===80){\r\n        content=\"Welcome buddy  !\"\r\n    }\r\n    else{\r\n     content=   this.props.gameStatus===60?\r\n    <div> Player 1 <br/>Is The <br/> Winner </div>\r\n    :\r\n    <div> Player 2 <br/>Is The <br/> Winner </div>\r\n    }\r\n\r\n    return content;\r\n    }\r\n\r\n\r\n    render() {\r\n       if (this.props.gameStatus===80){\r\n        return (\r\n            <div className=\"newGame\" >\r\n            <div className=\"content\">\r\n            {this.message()}\r\n            </div>\r\n            <div className=\"startNewGame\" onClick={this.props.setupNewGameHandler} >\r\n            Click here to start new game\r\n            </div>\r\n        </div>);\r\n       }\r\n\r\n       else{\r\n        return (\r\n            <div className=\"winner\" >\r\n                <div className=\"content\">\r\n                {this.message()}\r\n                </div>\r\n                <div className=\"startNewGame\" onClick={this.props.setupNewGameHandler} >\r\n                Click here to start new game\r\n                </div>\r\n            </div>\r\n        );}\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default NewGame\r\n","import React, { Component } from 'react';\r\nimport './Game.css';\r\nimport '../statusBar/StatusBar';\r\nimport Board from '../board/Board';\r\nimport StatusBar from '../statusBar/StatusBar';\r\nimport Outcheckers from '../outcheckers/Outcheckers';\r\nimport NewGame from '../NewGame/NewGame';\r\n\r\nexport class Game extends Component {\r\n  \r\n    //Initial state\r\n    state = {\r\n        gameStatus: 80, //not started\r\n        history: [],\r\n        currentPosition: 0,\r\n        p1IsNext: true,\r\n        dice: [0],\r\n        diceSave:[0],\r\n        points: Array(24).fill({ player: false, checkers: 0 }),\r\n        jail: { player1: 0, player2: 0 },\r\n        outcheckers: { player1: 15, player2: 15 },\r\n        movingChecker: false,\r\n        players: { p1: 'Player 1', p2: 'Player 2' },\r\n        gameOver: true,\r\n    }\r\n\r\n    // Game Over\r\n    gameOver = () => {\r\n\r\n        if (this.state.gameOver) {\r\n            return <NewGame\r\n                gameStatus={this.state.gameStatus}\r\n                setupNewGameHandler={this.setupNewGameHandler}\r\n            />;\r\n        }\r\n\r\n    } \r\n    //Set new history\r\n    setHistory = (p1IsNext, dice, points, jail, outcheckers, gameStatus) => {\r\n\r\n        const history = {\r\n            p1IsNext: p1IsNext,\r\n            dice: [...dice],\r\n            points: [...points],\r\n            jail: { ...jail },\r\n            outcheckers: { ...outcheckers },\r\n            gameStatus: gameStatus,\r\n        }\r\n        return history;\r\n    }\r\n    //set up new game\r\n    setupNewGameHandler = () => {\r\n        \r\n        const gameStatus = 11; //New game\r\n        const history = [];\r\n        const currentPosition = 0\r\n        const p1IsNext =  true ;\r\n        const dice = [0];\r\n        const diceSave=[0];\r\n        const points = Array(24).fill({ player: false, checkers: 0 });\r\n        const jail = { player1: 0, player2: 0 };\r\n        const outcheckers = { player1: 0, player2: 0 };\r\n        const movingChecker = false;\r\n        const players = { p1: \"player1\", p2: \"player2\"};\r\n\r\n        history.push(this.setHistory(p1IsNext, dice, points, jail, outcheckers));\r\n\r\n        //set points\r\n        \r\n        points[0] = { player: 1, checkers: 2 };\r\n        points[11] = { player: 1, checkers: 5 };\r\n        points[16] = { player: 1, checkers: 3 };\r\n        points[18] = { player: 1, checkers: 5 };\r\n        points[23] = { player: 2, checkers: 2 };\r\n        points[12] = { player: 2, checkers: 5 };\r\n        points[7] = { player: 2, checkers: 3 };\r\n        points[5] = { player: 2, checkers: 5 };\r\n        \r\n    \r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: currentPosition,\r\n            p1IsNext: p1IsNext,\r\n            dice: dice,\r\n            diceSave: diceSave,\r\n            points: points,\r\n            jail: jail,\r\n            outcheckers: outcheckers,\r\n            movingChecker: movingChecker,\r\n            players: players,\r\n            gameOver:false\r\n        });\r\n\r\n    }\r\n    undoHandler = () => {\r\n        \r\n        if (this.state.currentPosition>0){\r\n        const history = [...this.state.history];\r\n        const newPosition = this.state.currentPosition - 1;\r\n        const p1IsNext = history[newPosition].p1IsNext;\r\n        const dice = [...history[newPosition].dice];\r\n        const jail = { ...history[newPosition].jail };\r\n        const outcheckers = { ...history[newPosition].outcheckers };\r\n        const movingChecker = false;\r\n\r\n        console.log('Undo last move');\r\n\r\n        const moves = this.calculateCanMove(this.state.history[newPosition].points, dice, p1IsNext, jail);\r\n        const points = moves.points;\r\n        const gameStatus = moves.gameStatus;\r\n        //remove last element from history\r\n        history.pop();\r\n\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: newPosition,\r\n            p1IsNext: p1IsNext,\r\n            dice: dice,\r\n            points: points,\r\n            jail: jail,\r\n            outcheckers: outcheckers,\r\n            movingChecker: movingChecker\r\n        });\r\n    }\r\n    }\r\n    //Get the game status\r\n    getGameStatus = () => {\r\n        switch (this.state.gameStatus) {\r\n            case 11: return \"New game\";\r\n            case 20: return \"Roll dice\";\r\n            case 30: return \"Playing\";\r\n            case 31: return \"Playing from jail\";\r\n            case 32: return \"Bearing off\";\r\n            case 40: return \"No die to play\";\r\n            case 50: return \"No moves available\";\r\n            case 60: return \"Player 1 wins\";\r\n            case 70: return \"Player 2 wins\";\r\n            case 80: return \"Not started\";\r\n            default: return this.state.gameStatus;\r\n        }\r\n    }\r\n    //Return the player number 1 or 2.\r\n    getPlayer = (p1IsNext) => p1IsNext ? 1 : 2;\r\n    //Get points without actions. It creates a new object\r\n    getPointsWithoutActions = (points) => points.map((point) => {\r\n            return { player: point.player, checkers: point.checkers };\r\n        });\r\n    getoutcheckersWithoutActions = (outcheckers) => {\r\n        return { player1: outcheckers.player1, player2: outcheckers.player2 }\r\n    }\r\n    //Check if player has all the checkers in the home board\r\n    checkHomeBoard = (points, p1IsNext) => {\r\n\r\n        //Checkers in homeboard. If true it's good to go outside\r\n        let homeBoard = true;\r\n\r\n        //get points with actions\r\n        points.map((point, index) => {\r\n\r\n            //Check homeboard\r\n            //Player 1\r\n            if (p1IsNext && index <= 17\r\n                && point.player === 1\r\n            ) {\r\n                homeBoard = false;\r\n            }\r\n            //Player 2\r\n            else if (!p1IsNext && index >= 6\r\n                && point.player === 2\r\n            ) {\r\n                homeBoard = false;\r\n            }\r\n\r\n            return null;\r\n\r\n        });\r\n\r\n        return homeBoard;\r\n\r\n    }\r\n    //Check if checker can bear off\r\n    checkCanBearOff = (points, checker, p1IsNext, dice) => {\r\n\r\n        let canBearOff = false;\r\n\r\n        //Check if it is a player checker\r\n        if (checker >= 0 && checker < 24 && points[checker].player === this.getPlayer(p1IsNext)) {\r\n\r\n            for (let die of dice) {\r\n                //check if the dice have the right number to bear off\r\n                if ((p1IsNext && (checker + die) === 24) || (!p1IsNext && (checker - die) === -1)) {\r\n                    canBearOff = die;\r\n                }\r\n            }\r\n\r\n            if (!canBearOff) {\r\n\r\n                const highDie = [...dice].sort().reverse()[0]; //Get the highest die\r\n                let checkerBehind = false;//Check if there is checker behind the moving checker\r\n\r\n                //die is more than necessary to bear off\r\n                if ((p1IsNext && (checker + highDie) > 24) || (!p1IsNext && (checker - highDie) < -1)) {\r\n\r\n                    if (p1IsNext) {\r\n                        for (let i = 18; i < checker; i++) {\r\n                            if (points[i].player && points[i].player === this.getPlayer(p1IsNext)) {\r\n                                checkerBehind = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 5; i > checker; i--) {\r\n                            if (points[i].player && points[i].player === this.getPlayer(p1IsNext)) {\r\n                                checkerBehind = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //If there is no checker behind, it can bear off\r\n                    if (!checkerBehind) {\r\n                        canBearOff = highDie;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return canBearOff;\r\n    } \r\n    getMovingChecker = (p1IsNext) => {\r\n        let movingChecker;\r\n        if (this.state.movingChecker !== false) { //Moving checker is assigned\r\n            movingChecker = this.state.movingChecker;\r\n        } else { //Checker coming from jail\r\n            if (p1IsNext) {\r\n                movingChecker = -1;\r\n            }\r\n            else {\r\n                movingChecker = 24;\r\n            }\r\n        }\r\n        return movingChecker;\r\n    }\r\n\r\n\r\n\r\n    \r\n    //Roll dices\r\n    rollDiceHandler = () => {\r\n\r\n        let p1IsNext =  this.state.p1IsNext;\r\n        //new dice\r\n        let dice = [];\r\n        let diceSave=[];\r\n        //Get two random numbers\r\n        dice.push(Math.floor(Math.random() * 6) + 1);\r\n        dice.push(Math.floor(Math.random() * 6) + 1);\r\n        //duplicate numbers if the same\r\n        if (dice[0] === dice[1]) {\r\n            dice[2] = dice[3] = dice[0];\r\n        }\r\n        diceSave=[...dice];\r\n\r\n        console.log(\"Rolled dice: \" + dice);\r\n\r\n        //Get moves and status\r\n        const moves = this.calculateCanMove(\r\n            this.getPointsWithoutActions(this.state.points),\r\n            dice,\r\n            p1IsNext,\r\n            this.state.jail\r\n        );\r\n\r\n        //get points and status\r\n        const points = moves.points;\r\n        let gameStatus = moves.gameStatus;\r\n        //reset history\r\n        const currentPosition = 0;\r\n        const history = [];\r\n        //Save current state into history\r\n        history.push(this.setHistory(\r\n            p1IsNext,\r\n            dice,\r\n            points,\r\n            this.state.jail,\r\n            this.state.outcheckers,\r\n            gameStatus\r\n        ));\r\n\r\n        if (gameStatus===50){\r\n            p1IsNext=!p1IsNext;\r\n            dice[0]=0;\r\n            diceSave[0]=0;\r\n            this.setState({\r\n                gameStatus: gameStatus,\r\n                points: points,\r\n                dice: dice,\r\n                diceSave:diceSave,\r\n                p1IsNext: p1IsNext,\r\n            });      \r\n        }\r\n        else{\r\n        //Set new state\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: currentPosition,\r\n            points: points,\r\n            dice: dice,\r\n            diceSave:diceSave,\r\n            p1IsNext: p1IsNext,\r\n        });\r\n     }\r\n    }\r\n\r\n    //Calculate possible moves return an object with points and game status\r\n    calculateCanMove = (points, dice, p1IsNext, jail) => {\r\n\r\n        let newPoints = [...points];\r\n        let gameStatus = 50; //No moves available\r\n        if (!dice[0]) {\r\n            gameStatus = 40; // No dice to play\r\n        }\r\n\r\n\r\n        \r\n        else {\r\n\r\n\r\n\r\n\r\n\r\n            //check if there is checker on gray Bar\r\n            if ((p1IsNext && jail.player1) ||\r\n                (!p1IsNext && jail.player2)) {\r\n\r\n                for (let die of dice) {\r\n                    const destination = p1IsNext ? die - 1 : 24 - die;\r\n                    if (points[destination].player === this.getPlayer(p1IsNext) || //point belongs to user\r\n                        points[destination].checkers < 2) { //point is empty or belongs to other user but with only one checker\r\n                        newPoints[destination].canReceive = this.receiveCheckerHandler.bind(this, die);\r\n                        gameStatus = 31; //Playing from jail\r\n                    }\r\n                    this.setState({movingChecker:false});\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            else {\r\n\r\n                const inHomeBoard = this.checkHomeBoard(newPoints, p1IsNext);\r\n\r\n                for (let index = 0; index < points.length; index++) {\r\n\r\n                    let canMove = false;\r\n\r\n                    if (points[index].player === this.getPlayer(p1IsNext)) {\r\n                        for (let die of dice) {\r\n\r\n                            const destination = p1IsNext ? index + die : index - die;\r\n                            if (!canMove && destination < 24 && destination >= 0) {\r\n                                if (points[destination].player === this.getPlayer(p1IsNext) ||\r\n                                    points[destination].checkers < 2) {\r\n                                    canMove = true;\r\n                                    gameStatus = 30; //Playing\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (inHomeBoard && ((p1IsNext && index >= 18) || (!p1IsNext && index <= 5))) {\r\n\r\n                        if (this.checkCanBearOff(points, index, p1IsNext, dice)) {\r\n                            canMove = true;\r\n                            gameStatus = 32; //Bearing off\r\n                        }\r\n                    }\r\n\r\n                    if (canMove) {\r\n                        newPoints[index].canMove = this.moveCheckerHandler.bind(this, index);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n       \r\n        return { points: newPoints, gameStatus: gameStatus };\r\n    }\r\n\r\n    //Set moving checker\r\n    moveCheckerHandler = (checker) => {\r\n\r\n        let gameStatus = 30; //playing\r\n        const p1IsNext = this.state.p1IsNext;\r\n        //Get outcheckers without actions\r\n        const outcheckers = this.getoutcheckersWithoutActions(this.state.outcheckers);\r\n        //get points without actions\r\n        let points = this.getPointsWithoutActions(this.state.points);\r\n\r\n        //set or unset the moving checker\r\n        const movingChecker = checker !== this.state.movingChecker ? checker : false;\r\n\r\n        if (movingChecker !== false) {\r\n            //add action to the moving checker. This uncheck the moving checker\r\n            points[movingChecker].canMove = this.moveCheckerHandler.bind(this, movingChecker);\r\n\r\n            for (let die of this.state.dice) {\r\n\r\n                const destination = p1IsNext ? movingChecker + die : movingChecker - die;\r\n                if (destination < 24 && destination >= 0) {\r\n                    //Check if destnation can receive the checker\r\n                    if (points[destination].player === this.getPlayer(p1IsNext) ||\r\n                        points[destination].checkers < 2) {\r\n                        points[destination].canReceive = this.receiveCheckerHandler.bind(this, die); //Add can Receive to point\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Bearing off\r\n            if (this.checkHomeBoard(points, p1IsNext) &&\r\n                ((p1IsNext && movingChecker >= 18) || (!p1IsNext && movingChecker <= 5))) {\r\n                    console.log(\"Home board clean\");\r\n                    \r\n                //Get the dice to move\r\n                let die = this.checkCanBearOff(points, movingChecker, p1IsNext, this.state.dice);\r\n                if (die) {\r\n                        console.log(\"Can bear off\");\r\n                    if (p1IsNext) {\r\n                        outcheckers.p1CanReceive = this.receiveCheckerHandler.bind(this, die);                        \r\n                    } else {\r\n                        outcheckers.p2CanReceive = this.receiveCheckerHandler.bind(this, die);\r\n                    }\r\n                    gameStatus = 32; //Bearing off\r\n                }\r\n                console.log(this.state);\r\n                \r\n            }\r\n\r\n            console.log(\"moving checker from point \" + (p1IsNext ? movingChecker + 1 : 24 - movingChecker));\r\n        }\r\n        else {\r\n            const moves = this.calculateCanMove(points, this.state.dice, this.state.p1IsNext, this.state.jail);\r\n            points = moves.points;\r\n            gameStatus = moves.gameStatus;\r\n        }\r\n\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            points: points,\r\n            movingChecker: movingChecker,\r\n            outcheckers: outcheckers,\r\n        })\r\n\r\n    }\r\n\r\n    //Receive checker into the point\r\n    receiveCheckerHandler = (die) => {\r\n        const jail = { ...this.state.jail };\r\n        const outcheckers = this.getoutcheckersWithoutActions(this.state.outcheckers);\r\n        const dice = [...this.state.dice];\r\n        let p1IsNext = this.state.p1IsNext;\r\n        let gameStatus = 30; //playing\r\n\r\n        //get points without actions\r\n        let points = this.state.points;\r\n\r\n        //get the moving checker or jail (-1 or 24)\r\n        let movingChecker = this.getMovingChecker(p1IsNext);\r\n        console.log(movingChecker);\r\n        \r\n\r\n        //get destination\r\n        const destination = p1IsNext ? movingChecker + die : movingChecker - die;\r\n\r\n        //Logging\r\n        if (destination > 23 || destination < 0) {\r\n            console.log('Bearing off Checker');\r\n        } else {\r\n            console.log('Moving checker to point ' + (p1IsNext ? destination + 1 : 24 - destination));\r\n        }\r\n\r\n        //Remove the checker from orign and clean point if it has no checker\r\n        if (movingChecker >= 0 && movingChecker <= 23 &&  points[movingChecker]) {\r\n            points[movingChecker].checkers--;\r\n\r\n            if (points[movingChecker].checkers === 0) {\r\n                points[movingChecker].player = false; //unassign point if there is no checker\r\n            }\r\n\r\n        }\r\n        else { //remove from jail\r\n            if (movingChecker === -1) {//remove p1 from gray bar\r\n                jail.player1--;\r\n            }\r\n            else if (movingChecker === 24) { //remove p2 from gray bar\r\n                jail.player2--;\r\n            }\r\n        }\r\n\r\n        //Moving checker inside the board\r\n        if (destination <= 23 && destination >= 0) {\r\n            if (points[destination].player === this.getPlayer(p1IsNext)\r\n                || points[destination].player === false) { //Point either belongs to player or to nobody\r\n\r\n                //Add checker to destination\r\n                points[destination].player=this.getPlayer(p1IsNext);\r\n                points[destination].checkers++;\r\n            }\r\n            else { //Destination has different player.\r\n                //Send to gray bar\r\n                if (p1IsNext) {\r\n                    jail.player2++\r\n                } else {\r\n                    jail.player1++\r\n                }\r\n            }\r\n            //Assign destination point to player. In this case destination has only one checker\r\n            points[destination].player = this.getPlayer(p1IsNext);\r\n        }\r\n        else { //Bearing off\r\n            if (p1IsNext) {\r\n                outcheckers.player1++;\r\n            } else {\r\n                outcheckers.player2++;\r\n            }\r\n        }\r\n\r\n        //Moving checker now is false\r\n        movingChecker = false;\r\n\r\n        //remove die from dice\r\n        const diceIndex = dice.findIndex((dieNumber) => dieNumber === die);\r\n        dice.splice(diceIndex, 1);\r\n        console.log(\"Played die \" + die);\r\n\r\n        //Change player if no die\r\n\r\n     \r\n            \r\n        \r\n        for(let point of points){\r\n                point.canReceive=false;\r\n                point.canMove=false;\r\n        \r\n            const moves = this.calculateCanMove(points, dice, p1IsNext, jail);\r\n            points = moves.points;\r\n            gameStatus = moves.gameStatus;\r\n\r\n\r\n               \r\n        if (dice.length === 0 ||gameStatus===50) {\r\n            dice[0] = 0;\r\n            p1IsNext = !p1IsNext;\r\n            this.setState(\r\n               {diceSave:[0]}\r\n            );\r\n        }  \r\n        }\r\n\r\n        const currentPosition = this.state.currentPosition + 1;\r\n        const history = [...this.state.history];\r\n        history.push(this.setHistory(p1IsNext, dice, points, jail, outcheckers));\r\n\r\n        //Check if all checkers are in the outside bar\r\n        if (outcheckers.player1 === 15) {\r\n            gameStatus = 60; //Player one wins\r\n            this.setState({gameOver:true});\r\n        } else if (outcheckers.player2 === 15) {\r\n            gameStatus = 70; //Player two wins\r\n            this.setState({gameOver:true});\r\n        }\r\n        \r\n        \r\n\r\n        this.setState({\r\n            gameStatus: gameStatus,\r\n            history: history,\r\n            currentPosition: currentPosition,\r\n            p1IsNext: p1IsNext,\r\n            dice: dice,\r\n            points: points,\r\n            jail: jail,\r\n            outcheckers: outcheckers,\r\n            movingChecker: null,\r\n        })\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n\r\n                <StatusBar\r\n                points={this.state.points}\r\n                jail= {this.state.jail}\r\n                gameStatus= {this.state.gameStatus}\r\n                p1IsNext={this.state.p1IsNext}\r\n                />\r\n\r\n                <div className=\"gamezone\">\r\n                <Board \r\n                points={this.state.points}\r\n                jail={this.state.jail}\r\n                gameStatus={this.state.gameStatus}\r\n                dices={this.state.diceSave}\r\n                rolldices={this.rollDiceHandler}\r\n                p1IsNext={this.state.p1IsNext}\r\n                />  \r\n                <Outcheckers \r\n                out={this.state.outcheckers}\r\n                undo={this.undoHandler}\r\n                />\r\n                </div>\r\n                \r\n                {this.gameOver()}\r\n            </div>           \r\n        )\r\n    }\r\n}\r\nexport default Game\r\n","import React, { Component } from 'react';\nimport Game from './components/game/Game';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Game/>\n      </div>\n    )\n  } \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}